/**
 * This is an autogenerated file created by the Stencil build process.
 * It contains typing information for all components that exist in this project
 * and imports for stencil collections that might be configured in your stencil.config.js file
 */

import '@stencil/core';

declare global {
  namespace JSX {
    interface Element {}
    export interface IntrinsicElements {}
  }
  namespace JSXElements {}

  interface HTMLStencilElement extends HTMLElement {
    componentOnReady(): Promise<this>;
    componentOnReady(done: (ele?: this) => void): void;

    forceUpdate(): void;
  }

  interface HTMLAttributes {}
}


declare global {

  namespace StencilComponents {
    interface MyContainer {
      'language': string;
    }
  }

  interface HTMLMyContainerElement extends StencilComponents.MyContainer, HTMLStencilElement {}

  var HTMLMyContainerElement: {
    prototype: HTMLMyContainerElement;
    new (): HTMLMyContainerElement;
  };
  interface HTMLElementTagNameMap {
    'my-container': HTMLMyContainerElement;
  }
  interface ElementTagNameMap {
    'my-container': HTMLMyContainerElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'my-container': JSXElements.MyContainerAttributes;
    }
  }
  namespace JSXElements {
    export interface MyContainerAttributes extends HTMLAttributes {
      'language'?: string;
    }
  }
}


declare global {

  namespace StencilComponents {
    interface MyModal {
      'appUrl': string;
    }
  }

  interface HTMLMyModalElement extends StencilComponents.MyModal, HTMLStencilElement {}

  var HTMLMyModalElement: {
    prototype: HTMLMyModalElement;
    new (): HTMLMyModalElement;
  };
  interface HTMLElementTagNameMap {
    'my-modal': HTMLMyModalElement;
  }
  interface ElementTagNameMap {
    'my-modal': HTMLMyModalElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'my-modal': JSXElements.MyModalAttributes;
    }
  }
  namespace JSXElements {
    export interface MyModalAttributes extends HTMLAttributes {
      'appUrl'?: string;
      'onCloseApp'?: (event: CustomEvent) => void;
    }
  }
}


declare global {

  namespace StencilComponents {
    interface MyWidget {
      'action': string;
      'appUrl': string;
      'image': string;
      'text': string;
    }
  }

  interface HTMLMyWidgetElement extends StencilComponents.MyWidget, HTMLStencilElement {}

  var HTMLMyWidgetElement: {
    prototype: HTMLMyWidgetElement;
    new (): HTMLMyWidgetElement;
  };
  interface HTMLElementTagNameMap {
    'my-widget': HTMLMyWidgetElement;
  }
  interface ElementTagNameMap {
    'my-widget': HTMLMyWidgetElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'my-widget': JSXElements.MyWidgetAttributes;
    }
  }
  namespace JSXElements {
    export interface MyWidgetAttributes extends HTMLAttributes {
      'action'?: string;
      'appUrl'?: string;
      'image'?: string;
      'onOpenApp'?: (event: CustomEvent) => void;
      'text'?: string;
    }
  }
}

declare global { namespace JSX { interface StencilJSX {} } }

export declare function defineCustomElements(window: any): void;